version: '3'
services:
  lost_grandma:
    depends_on:
      - tor
    build: .
    image: ${LOST_GRANDMA_IMAGE_ID}
    env_file:
      - staging.env
    networks:
      - core-infra
    command: ['./launch.sh']
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 180s
      placement:
        constraints:
          - node.labels.stateless == true
  worker:
    depends_on:
      - tor
    build: .
    image: ${LOST_GRANDMA_IMAGE_ID}
    env_file:
      - staging.env
    networks:
      - core-infra
    command: ["./launch_workers.sh"]
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 100
        window: 180s      
      placement:
        constraints:
          - node.labels.stateless == true
  tor:
    networks:
      - core-infra
    build:
      context: ./scripts/tor
      dockerfile: Dockerfile
    image: ${TOR_IMAGE_ID}
    expose:
      - 9050
      - 9080
      - 9051
    ports:
      - "9050:9050"
      - "9051:9051"
      - "9080:9080"
    command: ["./launch_tor.sh"]
    deploy:
      mode:
        replicated: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 180s
      placement:
        constraints:
          - node.labels.stateless == true

  batch_coordinator_service:
    depends_on:
      - tor
      - lost_grandma
    build: .
    image: ${LOST_GRANDMA_IMAGE_ID}
    env_file:
      - staging.env
    networks:
      - core-infra
    command: ["./services/batch_coordinator/launch.sh"]
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 100
        window: 180s
      placement:
        constraints:
          - node.labels.stateless == true
          worker:
            depends_on:
              - tor
            build: .
            image: ${LOST_GRANDMA_IMAGE_ID}
            env_file:
              - staging.env
            networks:
              - core-infra
            deploy:
              restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 100
                window: 180s
              placement:
                constraints:
                  - node.labels.stateless == true


  image_service:
    depends_on:
      - tor
      - lost_grandma
    build: .
    image: ${LOST_GRANDMA_IMAGE_ID}
    env_file:
      - staging.env
    networks:
      - core-infra
    command: ["./workers/image_services/launch.sh"]
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 100
        window: 180s      
      placement:
        constraints:
          - node.labels.stateless == true
          worker:
            depends_on:
              - tor
            build: .
            image: ${LOST_GRANDMA_IMAGE_ID}
            env_file:
              - staging.env
            networks:
              - core-infra
            deploy:
              restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 100
                window: 180s      
              placement:
                constraints:
                  - node.labels.stateless == true

  label_detection_service:
    depends_on:
      - tor
      - lost_grandma
    build: .
    image: ${LOST_GRANDMA_IMAGE_ID}
    env_file:
      - staging.env
    networks:
      - core-infra
    command: ["./workers/label_detection_services/launch.sh"]
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 100
        window: 180s
      placement:
        constraints:
          - node.labels.stateless == true
          worker:
            depends_on:
              - tor
            build: .
            image: ${LOST_GRANDMA_IMAGE_ID}
            env_file:
              - staging.env
            networks:
              - core-infra
            deploy:
              restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 100
                window: 180s
              placement:
                constraints:
                  - node.labels.stateless == true

  similar_images_service:
    depends_on:
      - tor
      - lost_grandma
    build: .
    image: ${LOST_GRANDMA_IMAGE_ID}
    env_file:
      - staging.env
    networks:
      - core-infra
    command: ["./workers/similar_images_services/launch.sh"]
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 100
        window: 180s
      placement:
        constraints:
          - node.labels.stateless == true
          worker:
            depends_on:
              - tor
            build: .
            image: ${LOST_GRANDMA_IMAGE_ID}
            env_file:
              - staging.env
            networks:
              - core-infra
            deploy:
              restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 100
                window: 180s
              placement:
                constraints:
                  - node.labels.stateless == true

  classification_service:
    depends_on:
      - tor
      - lost_grandma
    build: .
    image: ${LOST_GRANDMA_IMAGE_ID}
    env_file:
      - staging.env
    networks:
      - core-infra
    command: ["./workers/classification_services/launch.sh"]
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 100
        window: 180s
      placement:
        constraints:
          - node.labels.stateless == true
          worker:
            depends_on:
              - tor
            build: .
            image: ${LOST_GRANDMA_IMAGE_ID}
            env_file:
              - staging.env
            networks:
              - core-infra
            deploy:
              restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 100
                window: 180s
              placement:
                constraints:
                  - node.labels.stateless == true

networks:  
  core-infra:
    external: true